{"version":3,"sources":["store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","components/layout/SignedInLink.js","store/action/authAction.js","components/layout/SignedOutLink.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/action/projectAction.js","App.js","serviceWorker.js","index.js"],"names":["initState","authError","authReducer","state","arguments","length","undefined","action","type","console","log","Object","objectSpread","err","message","projects","id","title","content","projectReducer","project","rootReducer","combineReducers","auth","firebase","firebaseReducer","firestore","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","connect","dispatch","signOut","getState","_ref2","getFirebase","then","props","react_default","a","createElement","className","react_router_dom","to","href","onClick","profile","initials","SignedOutLink","links","uid","layout_SignedInLink","layout_SignedOutLink","Notifications","notifications","map","item","key","user","moment","time","toDate","fromNow","ProjectSummary","_ref","authorFirstName","authorLastName","createdAt","calendar","Projectlist","projects_ProjectSummary","Dashboard","_this$props","this","ProjectList","dashboard_Notifications","react_router","Component","compose","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","defineProperty","target","value","handleSubmit","preventDefault","signIn","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","cols","rows","authorId","add","Date","App","layout_Navbar","exact","path","component","ProjectDetails","isLocalhost","Boolean","window","location","hostname","register","config","navigator","URL","process","origin","addEventListener","swUrl","concat","fetch","response","contentType","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","firebaseConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","react_redux_es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.19c1962f.chunk.js","sourcesContent":["const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error')\r\n            return {\r\n                ...state,\r\n                authError: 'Login Fail'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success')\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n    projects: [\r\n        { id: '1', title: 'help me find peach', content: 'blah blah blah' },\r\n        { id: '2', title: 'collect all the stars', content: 'blah blah blah' },\r\n        { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' }\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('create project', action.project)\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err)\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\nimport { firestoreReducer } from 'redux-firestore'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer\r\n})\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyDYPgDZa1Y46IaowtXgOrVwWuruT1xvcW8\",\r\n    authDomain: \"crud-project-react.firebaseapp.com\",\r\n    databaseURL: \"https://crud-project-react.firebaseio.com\",\r\n    projectId: \"crud-project-react\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"981725580414\",\r\n    appId: \"1:981725580414:web:82305eacda0d966d\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nexport default firebase;","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/action/authAction'\r\n\r\nconst SignedInLink = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li><a href='/#' onClick={props.signOut}>Log Out</a></li>\r\n            <li>\r\n                <NavLink to='/' className='btn btn-floating pink lighten-1'>\r\n                    {props.profile.initials}\r\n                </NavLink>\r\n            </li>\r\n        </ul >\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLink);","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err });\r\n        });\r\n\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then(resp => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            });\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err });\r\n        });\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLink = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n                <li><NavLink to='/signup'>Signup</NavLink></li>\r\n                <li><NavLink to='/signin'>Login</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLink;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLink'\r\nimport SignedOutLinks from './SignedOutLink'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">RRF Example Project</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notification\">\r\n                        {notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"pink-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text note date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by the {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Projectlist = ({ projects }) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/' + project.id} key={project.id}>\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projectlist","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        // console.log(this.props);\r\n        const { projects, auth, notifications } = this.props;\r\n\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state)\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n    if (project) {\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action gret lighten-4 grey-text\">\r\n                        <div>Post by {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    // console.log(state)\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/action/authAction'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props\r\n\r\n        if (auth.uid) return <Redirect to='/' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/action/authAction'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props\r\n\r\n        if (auth.uid) return <Redirect to='/' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/action/projectAction'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(this.state)\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n        const { auth } = this.props\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea id=\"content\" cols=\"30\" rows=\"10\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile\r\n        const authorId = getState().firebase.auth.uid\r\n\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err })\r\n        })\r\n    }\r\n}","import React, { Component } from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport firebaseConfig from './config/firebaseConfig'\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reactReduxFirebase(firebaseConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true }),\n        reduxFirestore(firebaseConfig)\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(\n        <Provider store={store}><App /></Provider>,\n        document.getElementById('root')\n    );\n    serviceWorker.register();\n});\n\n// // ใช้ redux devtools ใน chrome\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// const rrfConfig = {\n//     useFirestoreForProfile: true,\n//     userProfile: 'users',\n//     attachAuthIsReady: true,\n//     firebaseStateName: 'firebase'\n// };\n\n// const store = createStore(rootReducer,\n//     composeEnhancers(\n//         applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n//         reduxFirestore(firebase, rrfConfig),\n//     )\n// );\n\n// const rrfProps = {\n//     firebase,\n//     config: rrfConfig,\n//     dispatch: store.dispatch,\n//     createFirestoreInstance,\n// };\n\n// // authIsReady(store, 'firebase').then(() => {\n// //     console.log('Auth has loaded')\n// // })\n\n// ReactDOM.render(\n//     <Provider store={store}>\n//         <ReactReduxFirebaseProvider {...rrfProps}>\n//             <App />\n//         </ReactReduxFirebaseProvider>\n//     </Provider >,\n//     document.getElementById('root')\n// );\n\n\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}